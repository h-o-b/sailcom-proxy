<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
>

	<modelVersion>4.0.0</modelVersion>

	<name>SailCom Server Proxy</name>
	<groupId>ch.sailcom</groupId>
	<artifactId>sailcom-proxy</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<gcr.project>gcr.io/ferrous-coda-145407</gcr.project>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<servlet.version>3.1.0</servlet.version>
		<jersey.version>2.23.2</jersey.version>
		<weld.version>2.4.0.Final</weld.version>
		<jsoup.version>1.9.2</jsoup.version>
		<mapdb.version>3.0.2</mapdb.version>
		<slf4j.version>1.7.21</slf4j.version>
		<log4j.version>1.2.17</log4j.version>
		<junit.version>4.12</junit.version>
		<docker.host>tcp://192.168.99.100:2376</docker.host>
		<docker.certPath>C:\Users\Hannes\.docker\machine\machines\default</docker.certPath>
	</properties>

	<dependencies>

		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Jersey (JAX-RS) runtime -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!-- Weld CDI -->
		<dependency>
			<groupId>org.jboss.weld.servlet</groupId>
			<artifactId>weld-servlet-core</artifactId>
			<version>${weld.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext.cdi</groupId>
			<artifactId>jersey-cdi1x-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!-- HTML parsing -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>org.mapdb</groupId>
			<artifactId>mapdb</artifactId>
			<version>${mapdb.version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<finalName>sailcom-proxy</finalName>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- Copy Dockerfile to target -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.16.5</version>
				<extensions>true</extensions>
				<configuration>
					<images>
						<image>
							<alias>proxy</alias>
							<name>${gcr.project}/%a:%l</name>
							<!--name>%g/%a:%l</name-->
							<build>
								<dockerFile>${project.basedir}/target/Dockerfile</dockerFile>
							</build>
							<!--run> 
								<ports> 
									<port>tomcat.port:8080</port>
								</ports>
								<wait> 
									<http>
										<url>http://localhost:${tomcat.port}/sailcom-proxy/api/index.html</url>
									</http>
									<time>10000</time>
								</wait>
								<links> 
									<link>database:db</link>
								</links>
							</run-->
						</image>
						<!--image>
							<alias>database</alias> 
							<name>postgres:9</name>
							<run>
								<wait> 
									<log>database system is ready to accept connections</log>
									<time>20000</time>
								</wait>
							</run>
						</image-->
					</images>
				</configuration>
				<!-- Connect start/stop to pre- and post-integration-test phase, respectively if you want to start your docker containers during integration tests -->
				<executions>
					<execution>
						<id>docker:build</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

</project>
